from prompt_toolkit import PromptSession, prompt
from prompt_toolkit.key_binding import KeyBindings
from prompt_toolkit.input.defaults import create_input
from prompt_toolkit.output.defaults import create_output
from prompt_toolkit.shortcuts import PromptSession

def prompt_field(form, field_name, session=None):
    field = form.fields[field_name]
    current_value = form.cleaned_data.get(field_name, field.initial) if form.is_bound else field.initial
    prompt_text = f"{field.label} (current: {current_value}): "

    # Basic input validation
    def validate_input(text):
        if isinstance(field, forms.IntegerField) and not text.isdigit():
            raise ValueError("Please enter a valid number.")
        return text

    # Multiline for Textarea
    multiline = isinstance(field.widget, forms.Textarea)

    if session:
        # Use provided session for history
        return session.prompt(prompt_text, multiline=multiline, validator=validate_input)
    else:
        # Setup keybindings for emacs mode
        # bindings = KeyBindings()
        # bindings.add('c-f')(lambda event: event.app.editing_mode = EditingMode.EMACS)

        # Create input and output for mouse support
        input = create_input(mouse_support=True)
        output = create_output(mouse_support=True)

        return prompt(prompt_text, multiline=multiline, key_bindings=bindings, validator=validate_input, input=input, output=output)

import django
from django import forms
django.setup()

class PocForm(forms.Form):
    name = forms.CharField(max_length=16, label="What's your name?", help_text="Please enter your name.")
    description = forms.CharField(widget=forms.Textarea, label="Write a few words about yourself ...",
                                  help_text="Dont' be shy!")
    options = forms.ChoiceField(choices=[("a", "A"), ("b", "B"), ("c", "C")], label="Which one?",
                                help_text="Choose one, god dammit!")

    def clean(self):
        if self.cleaned_data.get("options", None) == "b":
            raise ValidationError("NEVER choose b!")
        
form = PocForm()
field_value = prompt_field(form, 'my_field')
print(field_value)
